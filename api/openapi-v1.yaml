openapi: 3.0.3
info:
  title: Hospital Service
  version: 1.0.11
servers:
  - url: http://localhost:9765

paths:
  /doctor:
    post:
      tags:
        - doctor
      summary: Register doctor to the hospital
      description: Register doctor to the hospital
      operationId: addDoctor
      requestBody:
        description: Create a new doctor in a hospital
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctor'

        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorResponse'          
        '405':
          description: Invalid input  
          
          
  /receptionist:
    post:
      tags:
        - receptionist
      summary: Register receptionist to the hospital
      description: Register receptionist to the hospital
      operationId: addreceptionist
      requestBody:
        description: Create a new receptionist in a hospital
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Receptionistregister'

        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceptionistResponse'          
        '405':
          description: Invalid input           
          
          
  /doctor/{doctorId}:
    get:
      tags:
        - doctor
      summary: Find doctor of a hospital by ID basically umrn
      description: Returns a single doctor
      operationId: getdoctorById
      parameters:
        - name: doctorId
          in: path
          description: ID of doctor to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorResponse'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Doctor not found          
          
          
  /receptionist/{receptionistId}:
    get:
      tags:
        - receptionist
      summary: Find receptionist of a hospital by ID 
      description: Returns a receptionist doctor
      operationId: getreceptionistById
      parameters:
        - name: receptionistId
          in: path
          description: ID of receptionist to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceptionistResponse'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Receptionist not found          
                   
 
 
 
 

    
  /login:
    post:
      tags:
        - login
      summary: Login the receptionist to the hospital
      description: Login the receptionist to the hospital
      operationId: loginReceptionist
      requestBody:
        description: Login the receptionist to the hospital
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'

        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receptionist'          
        '404':
          description: Credentials not found
  /patient:
    post:
      tags:
        - patient
      summary: Add a new patient in a hospital
      description: Add a new patient in a hospital
      operationId: addPatient
      requestBody:
        description: Create a new patient in a hospital
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'

        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientResponse'          
        '405':
          description: Invalid input

  /patient/{patientId}:
    get:
      tags:
        - patient
      summary: Find patient of a hospital by ID
      description: Returns a single patient
      operationId: getPatientById
      parameters:
        - name: patientId
          in: path
          description: ID of patient
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientResponse'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Patient not found
  /records/{aba_id}:
    get:
      tags:
        - health records
      summary: Find records of a patient by ID
      description: Returns an array of health records of the patient
      operationId: getRecordsById
      parameters:
        - name: aba_id
          in: path
          description: ABA ID of patient
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthRecords'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Patient not found

components:
  schemas:
    Doctor:
      type: object
      properties:
        doctorName:
          type: string
          format: string
          example: "Rahul"
        email_id:
          type: string
          format: email
          example: "email@example.com"
        phone_no:
          type: string
          format: phone
          example: "9999999999"
        gender:
          type: string
          format: gender
          example: "Female"
          enum:
            - "Male"
            - "Female"
        address:
          type: string
          format: address
          example: "121, Electronic City, Bengaluru - 100"
        UMRN_ID:
          type: string
          format: string
          example: "1986672626"
    DoctorResponse:
      type: object
      properties:
        doctorName:
          type: string
          format: string
          example: "Rahul"
        email_id:
          type: string
          format: email
          example: "email@example.com"
        phone_no:
          type: string
          format: phone
          example: "9999999999"
        gender:
          type: string
          example: "Female"
          format: gender
          enum:
            - "Male"
            - "Female"
        address:
          type: string
          format: address
          example: "121, Electronic City, Bengaluru - 100"
        UMRN_ID:
          type: string
          format: string
          example: "1986672626" 
          


    Receptionist:
      type: object
      properties:
        receptionistName:
          type: string
          format: string
          example: "Rahul"
        email_id:
          type: string
          format: email
          example: "email@example.com"
        phone_no:
          type: string
          format: phone
          example: "9999999999"
        gender:
          type: string
          format: gender
          example: "Female"
          enum:
            - "Male"
            - "Female"
        address:
          type: string
          format: address
          example: "121, Electronic City, Bengaluru - 100"
        
    ReceptionistResponse:
      type: object
      properties:
        receptionistName:
          type: string
          format: string
          example: "Rahul"
        email_id:
          type: string
          format: email
          example: "email@example.com"
        phone_no:
          type: string
          format: phone
          example: "9999999999"
        gender:
          type: string
          example: "Female"
          format: gender
          enum:
            - "Male"
            - "Female"
        address:
          type: string
          format: address
          example: "121, Electronic City, Bengaluru - 100"
        Receptionist_ID:
          type: string
          format: string
          example: "1986672626" 
    Patient:
      type: object
      properties:
        patientName:
          type: string
          format: string
          example: "Rahul"
        email_id:
          type: string
          format: email
          example: "email@example.com"
        phone_no:
          type: string
          format: phone
          example: "9999999999"
        gender:
          type: string
          format: gender
          example: "Female"
          enum:
            - "Male"
            - "Female"
        address:
          type: string
          format: address
          example: "121, Electronic City, Bengaluru - 100"
        ABHA_ID:
          type: string
          format: string
          example: "1986672626"
    PatientResponse:
      type: object
      properties:
        patient_id:
          type: integer
          format: int64
          example: 10
        patientName:
          type: string
          format: string
          example: "Rahul"
        email_id:
          type: string
          format: email
          example: "email@example.com"
        phone_no:
          type: string
          format: phone
          example: "9999999999"
        gender:
          type: string
          example: "Female"
          format: gender
          enum:
            - "Male"
            - "Female"
        address:
          type: string
          format: address
          example: "121, Electronic City, Bengaluru - 100"
        ABHA_ID:
          type: string
          format: string
          example: "1986672626"
    Login:
      type: object
      properties:
        email:
          type: string
          format: string
          example: "email@example.com"
        password:
          type: string
          format: password
          example: "*******"
    Receptionistregister:
      type: object
      properties:
        email:
          type: string
          format: string
          example: "email@example.com"
        name:
          type: string
          format: string
          example: "Rahul"
    HealthRecords:
      type: object
      properties:
        patient_id:
          type: string
          example: 10
        health_records:
          type: array
          items:
            type: object
            properties:
              category:
                type: string
                example: "Blood Report"
              doctor_id:
                type: string
                example: "23"
              date:
                type: string
                example: "22-08-2018"
              data: 
                type: string
                example: "Blood Group: B+"
              patient_id:
                type: string
                example: "10"
              npi_id:
                type: string
                example: "123"